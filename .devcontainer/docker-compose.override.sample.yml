services:
  app:
    environment:
      # Claude Code configuration
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-opus-4-20250514}

      # Serena MCP configuration
      - SERENA_MCP_PORT=${SERENA_MCP_PORT:-3000}
      - SERENA_MCP_HOST=0.0.0.0
      - MCP_SERVER_STDIO=true
      - MCP_DEBUG_PORT=${MCP_DEBUG_PORT:-9229}

      # User-specific environment variables
      - GIT_USER_NAME=${GIT_USER_NAME:-developer}
      - GIT_USER_EMAIL=${GIT_USER_EMAIL:-developer@example.com}

      # Additional MCP configuration
      - MCP_CONFIG_PATH=/workspace/.devcontainer/override_files/mcp-config.json
      - CLAUDE_MCP_CONFIG=/workspace/.devcontainer/override_files/mcp-config.json

      # npm global PATH and uv PATH
      - PATH=/home/node/.local/bin:/home/node/.npm-global/bin:$PATH

    volumes:
      # Mount user-specific configuration directories
      - ${HOME}/.claude:/home/node/.claude:cached
      - ${HOME}/.serena:/home/node/.serena:cached
      - ${HOME}/.ssh:/home/node/.ssh:ro
      - ${HOME}/.gitconfig:/home/node/.gitconfig:ro

      # Mount override files
      - ./override_files:/workspace/.devcontainer/override_files:cached

      # User workspace cache
      - ${HOME}/.cache:/home/node/.cache:cached

    # Additional ports for MCP servers
    # Note: ports are ignored when using network_mode: host
    # The services will be accessible on localhost at their respective ports

    # Override command to install tools and configure environment
    command: |
      bash -c "
        # Ensure required directories exist with correct permissions
        mkdir -p /home/node/.npm-global
        mkdir -p /home/node/.serena/logs
        mkdir -p /home/node/.claude

        # Configure Git with user information (skip if .gitconfig is mounted read-only)
        if [ ! -f /home/node/.gitconfig ]; then
          git config --global user.name \"\${GIT_USER_NAME}\"
          git config --global user.email \"\${GIT_USER_EMAIL}\"
        fi

        # Install Claude Code if not already installed
        if ! command -v claude &> /dev/null; then
          echo 'Installing Claude Code...'
          npm install -g @anthropic-ai/claude-code
        fi

        # Install uv (Python package installer) for Serena MCP
        if ! command -v uv &> /dev/null; then
          echo 'Installing uv...'
          curl -LsSf https://astral.sh/uv/install.sh | sh
        fi

        # Install GitHub CLI
        if ! command -v gh &> /dev/null; then
          echo 'Installing GitHub CLI...'
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo sh -c 'echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null'
          sudo apt update
          sudo apt install gh -y
        fi

        # Ensure PATH includes all necessary directories
        export PATH=\"/home/node/.local/bin:/home/node/.npm-global/bin:\$PATH\"

        # Install and configure MCP servers
        echo 'Installing MCP protocol servers...'
        npm install -g @modelcontextprotocol/server-filesystem

        # Wait for installations to complete and verify
        echo 'Verifying installations...'
        which claude || echo 'WARNING: claude not found in PATH'
        which uv || echo 'WARNING: uv not found in PATH'
        which gh || echo 'WARNING: gh not found in PATH'

        # Configure MCP servers for Claude Code (as node user in /workspace)
        echo 'Configuring MCP servers...'

        # Add filesystem MCP server
        echo 'Adding filesystem MCP server...'
        cd /workspace
        if /home/node/.npm-global/bin/claude mcp add --transport stdio filesystem -- npx @modelcontextprotocol/server-filesystem /workspace 2>&1 | tee /tmp/mcp-filesystem.log; then
          echo 'Filesystem MCP server added successfully'
        else
          echo 'Failed to add filesystem MCP server. Check /tmp/mcp-filesystem.log'
        fi

        # Add Serena MCP server
        echo 'Adding Serena MCP server...'
        if /home/node/.npm-global/bin/claude mcp add --transport stdio serena -- uvx --from git+https://github.com/oraios/serena serena start-mcp-server --context ide-assistant --project /workspace 2>&1 | tee /tmp/mcp-serena.log; then
          echo 'Serena MCP server added successfully'
        else
          echo 'Failed to add Serena MCP server. Check /tmp/mcp-serena.log'
        fi

        # Log startup complete
        echo 'DevContainer startup complete!'
        echo 'Claude Code and MCP servers are ready.'

        # Keep container running
        sleep infinity
      "
